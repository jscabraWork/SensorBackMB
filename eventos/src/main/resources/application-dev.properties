eureka.client.service-url.defaultZone=http://localhost:8761/eureka

spring.datasource.url=jdbc:mysql://microsat.czqzwtxszovu.us-east-1.rds.amazonaws.com/db_microservicio_eventos_mb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=America/Bogota&zeroDateTimeBehavior=CONVERT_TO_NULL
spring.datasource.username=root
spring.datasource.password=7*[3Eg*2ei2X
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug

#Kafka - Configuración unificada
spring.kafka.bootstrap-servers=b-1-public.democluster1.6auuxz.c4.kafka.us-east-1.amazonaws.com:9198

# Producer configuration
spring.kafka.producer.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.request.per.connection=5
spring.kafka.producer.transaction-id-prefix=eventos-service-${random.value}-

# Consumer configuration
spring.kafka.consumer.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.consumer.group-id=eventos-mb-consumer-events
spring.kafka.consumer.properties.spring.json.trusted.packages=com.arquitectura.*
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.isolation-level=READ_COMMITTED

# Admin configuration - IMPORTANTE para creación de topics
spring.kafka.admin.properties.bootstrap.servers=${spring.kafka.bootstrap-servers}
spring.kafka.admin.properties.security.protocol=SASL_SSL
spring.kafka.admin.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.admin.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required ;
spring.kafka.admin.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler
spring.kafka.admin.properties.request.timeout.ms=30000
spring.kafka.admin.properties.retries=5

# Logging
logging.level.org.springframework.kafka.transaction.KafkaTransactionManager=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.apache.kafka.clients.producer.internals.TransactionManager=DEBUG
logging.level.org.springframework.orm.jpa.JpaTransactionManager=DEBUG

