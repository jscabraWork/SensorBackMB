spring.application.name=microservicio-promotores
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${random.value}

spring.profiles.active=dev

#NOMBRES DE TOPICS
# Este es el sufijo que se le agrega a los topics para diferenciarlos entre ambientes
topic.suffix=mb

#PRODUCER
eventos-promotores.topic=crear-modificar-eventos-promotores-${topic.suffix}-topic

#CONSUMERS
promotor.topic=crear-modificar-promotor-${topic.suffix}-topic
#Microservicio pagos
ticket-promotor.topic=crear-modificar-tickets-promotor-${topic.suffix}-topic
tickets.topic=crear-modificar-tickets-${topic.suffix}-topic
#Microservicio eventos
eventos.topic=crear-modificar-eventos-${topic.suffix}-topic
tipos-eventos.topic=crear-modificar-tipos-eventos-${topic.suffix}-topic
dias.topic=crear-modificar-dias-${topic.suffix}-topic
tarifas.topic=crear-modificar-tarifas-${topic.suffix}-topic
temporadas.topic=crear-modificar-temporadas-${topic.suffix}-topic
localidades.topic=crear-modificar-localidades-${topic.suffix}-topic
imagenes.topic=crear-modificar-imagenes-${topic.suffix}-topic
ciudades.topic=crear-modificar-ciudad-${topic.suffix}-topic
venues.topic=crear-modificar-venues-${topic.suffix}-topic

#CONFIGURACION DE KAFKA
spring.kafka.producer.key-serializer =org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

#esto es necesario para idempotence pero tener en cuenta que este valor es segun la configuracion del del topic
spring.kafka.producer.acks = all

spring.kafka.producer.properties..delivery.timeout.ms=120000
#Tiempo para enviar un lote de mensajes, ahora lo dejo en 0 por que quiero que sea instantaneo pero en pagos sera diferente
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000

#Esto es true por defecto pero es mejor dejarlo explicito
spring.kafka.producer.properties.enable.idempotence=true

spring.kafka.producer.properties.max.in.flight.request.per.connection=5

spring.kafka.producer.transaction-id-prefix=promotores-mb-service-${random.value}-

#Solo para KafkaTransaction Manager
logging.level.org.springframework.kafka.transaction.KafkaTransactionManager=DEBUG
logging.level.org.springframework.transaction=DEBUG

#Para ver el de JPA y el de Kafka de manera internta
logging.level.org.apache.kafka.clients.producer.internals.TransactionManager=DEBUG

#Esta es importante para transacciones de JPA - TRACE
logging.level.org.springframework.orm.jpa.JpaTransactionManager=DEBUG
spring.kafka.admin.properties.auto.create.topics.enable=true

# CONFIGURACION CONSUMER KAFKA
spring.kafka.consumer.group-id=promotores-mb-consumer-events
spring.kafka.consumer.properties.spring.json.trusted.packages=com.arquitectura.*
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.isolation-level=READ_COMMITTED