spring.application.name=microservicio-puntosfisicos
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${random.value}

spring.profiles.active=dev


#NOMBRES DE TOPICS
# Este es el sufijo que se le agrega a los topics para diferenciarlos entre ambientes
topic.suffix=mb

eventos-puntosfisicos.topic=crear-modificar-eventos-puntosfisicos-${topic.suffix}-topic


#CONFIGURACION DE KAFKA
spring.kafka.producer.key-serializer =org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

#esto es necesario para idempotence pero tener en cuenta que este valor es segun la configuracion del del topic
spring.kafka.producer.acks = all

spring.kafka.producer.properties..delivery.timeout.ms=120000
#Tiempo para enviar un lote de mensajes, ahora lo dejo en 0 por que quiero que sea instantaneo pero en pagos sera diferente
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000

#Esto es true por defecto pero es mejor dejarlo explicito
spring.kafka.producer.properties.enable.idempotence=true

spring.kafka.producer.properties.max.in.flight.request.per.connection=5

spring.kafka.producer.transaction-id-prefix=puntosfisicos-mb-service-${random.value}-

#Solo para KafkaTransaction Manager
logging.level.org.springframework.kafka.transaction.KafkaTransactionManager=DEBUG
logging.level.org.springframework.transaction=DEBUG

#Para ver el de JPA y el de Kafka de manera internta
logging.level.org.apache.kafka.clients.producer.internals.TransactionManager=DEBUG

#Esta es importante para transacciones de JPA - TRACE
logging.level.org.springframework.orm.jpa.JpaTransactionManager=DEBUG
spring.kafka.admin.properties.auto.create.topics.enable=true