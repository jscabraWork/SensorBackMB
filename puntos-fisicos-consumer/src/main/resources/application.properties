spring.application.name=puntos-fisicos-consumer
server.port=${PORT:0}

spring.profiles.active=dev

# Sufijo parametrizable para los topics
topic.suffix=mb

puntoF.topic=crear-modificar-puntoF-${topic.suffix}-topic

#Microservicio pagos
ticket-puntofisico.topic=crear-modificar-tickets-puntosfisicos-${topic.suffix}-topic

#Microservicio eventos
eventos.topic=crear-modificar-eventos-${topic.suffix}-topic
tipos-eventos.topic=crear-modificar-tipos-eventos-${topic.suffix}-topic
dias.topic=crear-modificar-dias-${topic.suffix}-topic
tarifas.topic=crear-modificar-tarifas-${topic.suffix}-topic
temporadas.topic=crear-modificar-temporadas-${topic.suffix}-topic
localidades.topic=crear-modificar-localidades-${topic.suffix}-topic
imagenes.topic=crear-modificar-imagenes-${topic.suffix}-topic
ciudades.topic=crear-modificar-ciudad-${topic.suffix}-topic
venues.topic=crear-modificar-venues-${topic.suffix}-topic


spring.kafka.consumer.group-id=puntosfisicos-mb-consumer-events
spring.kafka.consumer.properties.spring.json.trusted.packages=com.arquitectura.*

#Desde que momento consume
spring.kafka.consumer.auto-offset-reset=earliest

#Filtro de que tipo de mensajes puede recibir el kakfa consumer, read_uncommited es el deafult, es decir lee todos
#read-committed Solo lee las cosas que ya se completaron
spring.kafka.consumer.isolation-level= READ_COMMITTED