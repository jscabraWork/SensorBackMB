spring.application.name=microservicio-oauth
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${random.value}


spring.config.import=optional:configserver:

spring.profiles.active=dev

# Google Config - Using environment variables for security
spring.security.oauth2.client.registration.google.client-id = ${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret = ${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope = openid,profile,email
spring.security.oauth2.client.provider.google.authorization-uri = https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri = https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri = https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri = https://www.googleapis.com/oauth2/v3/certs


# JWT Temporal para OAuth Registration
# IMPORTANTE: Generar una clave real con: openssl rand -base64 32
oauth.jwt.registration.secret = zR76J+f9d8PnTPwV8dfVlxDwsn+oGak8RkidyxMSafk=
oauth.jwt.registration.expiration-minutes = 15