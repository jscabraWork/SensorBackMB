eureka.client.service-url.defaultZone=http://localhost:8761/eureka

spring.datasource.url=jdbc:mysql://microsat.czqzwtxszovu.us-east-1.rds.amazonaws.com/db_microservicio_reporte_sensor?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=America/Bogota&zeroDateTimeBehavior=CONVERT_TO_NULL
spring.datasource.username=root
spring.datasource.password=7*[3Eg*2ei2X

# Configuración de logs para debug
logging.level.com.arquitectura=DEBUG
logging.level.com.arquitectura.ticket.controller=DEBUG
logging.level.org.springframework.web=DEBUG


#Kafka
spring.kafka.producer.bootstrap-servers=b-1-public.democluster1.6auuxz.c4.kafka.us-east-1.amazonaws.com:9198

#Kafka
spring.kafka.consumer.bootstrap-servers= b-1-public.democluster1.6auuxz.c4.kafka.us-east-1.amazonaws.com:9198
spring.kafka.bootstrap-servers=b-1-public.democluster1.6auuxz.c4.kafka.us-east-1.amazonaws.com:9198
spring.kafka.consumer.group-id=reporte-mb-consumer-events
spring.kafka.consumer.properties.spring.json.trusted.packages=com.arquitectura.*

#Desde que momento consume
spring.kafka.consumer.auto-offset-reset=earliest


#Filtro de que tipo de mensajes puede recibir el kakfa consumer, read_uncommited es el deafult, es decir lee todos
#read-committed Solo lee las cosas que ya se completaron
spring.kafka.consumer.isolation-level= READ_COMMITTED