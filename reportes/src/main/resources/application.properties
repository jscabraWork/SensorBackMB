spring.application.name=microservicio-reporte
server.port=${PORT:0}

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug

spring.jpa.properties.hibernate.jdbc.fetch_size=20
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type.preferred_instant_jdbc_type=TIMESTAMP

eureka.instance.instance-id=${spring.application.name}:${random.value}

server.connection-timeout=300000
spring.mvc.async.request-timeout=300000
spring.profiles.active=prod

#NOMBRES DE TOPICS
# Este es el sufijo que se le agrega a los topics para diferenciarlos entre ambientes
topic.suffix=sensor-mb

alcancias.topic=crear-modificar-alcancias-${topic.suffix}-topic

#Microservicio pagos
tickets.topic=crear-modificar-tickets-${topic.suffix}-topic
ingresos.topic=crear-modificar-ingresos-${topic.suffix}-topic
servicios.topic=crear-modificar-servicios-${topic.suffix}-topic
seguros.topic=crear-modificar-seguros-${topic.suffix}-topic
ordenes.topic=crear-modificar-ordenes-${topic.suffix}-topic
ordenes.alcancias.topic=crear-modificar-ordenes-alcancias-${topic.suffix}-topic
ordenes.adicionales.topic=crear-modificar-ordenes-adicionales-${topic.suffix}-topic
ordenes.promotores.topic=crear-modificar-ordenes-promotores-${topic.suffix}-topic
ordenes.puntosF.topic=crear-modificar-ordenes-puntosF-${topic.suffix}-topic
ordenes.traspaso.topic=crear-modificar-ordenes-traspaso-${topic.suffix}-topic
transacciones.topic=crear-modificar-transacciones-${topic.suffix}-topic

#Microservicio eventos
eventos.topic=crear-modificar-eventos-${topic.suffix}-topic
tipos-eventos.topic=crear-modificar-tipos-eventos-${topic.suffix}-topic
dias.topic=crear-modificar-dias-${topic.suffix}-topic
tarifas.topic=crear-modificar-tarifas-${topic.suffix}-topic

localidades.topic=crear-modificar-localidades-${topic.suffix}-topic
imagenes.topic=crear-modificar-imagenes-${topic.suffix}-topic
ciudades.topic=crear-modificar-ciudad-${topic.suffix}-topic
venues.topic=crear-modificar-venues-${topic.suffix}-topic

#Microservicio puntos fisicos
eventos-puntosfisicos.topic=crear-modificar-eventos-puntosfisicos-${topic.suffix}-topic

#Microservicio promotores
eventos-promotores.topic=crear-modificar-eventos-promotores-${topic.suffix}-topic


#Topics ususarios

clientes.topic=crear-modificar-clientes-${topic.suffix}-topic
organizadores.topic=crear-modificar-organizador-${topic.suffix}-topic


puntoF.topic=crear-modificar-puntoF-${topic.suffix}-topic
promotor.topic=crear-modificar-promotor-${topic.suffix}-topic

spring.kafka.consumer.group-id=reporte-${topic.suffix}-consumer-events

spring.kafka.consumer.properties.spring.json.trusted.packages=com.arquitectura.*

#Desde que momento consume
spring.kafka.consumer.auto-offset-reset=earliest


#Filtro de que tipo de mensajes puede recibir el kakfa consumer, read_uncommited es el deafult, es decir lee todos
#read-committed Solo lee las cosas que ya se completaron
spring.kafka.consumer.isolation-level= READ_COMMITTED

logging.level.org.springframework.security=DEBUG
